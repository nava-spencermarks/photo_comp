name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install development dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
    
    - name: Lint with flake8
      run: |
        # Stop on syntax errors or undefined names
        flake8 src test --count --select=E9,F63,F7,F82 --show-source --statistics
        # Check for other issues (non-blocking)
        flake8 src test --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Check code formatting
      run: |
        black --check src test *.py
        isort --check-only src test *.py

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('requirements.txt', 'requirements-dev.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
    
    - name: Run tests with coverage
      run: |
        cd test
        python -m pytest ../src ../test --cov=../src --cov-report=xml --cov-report=term-missing --cov-report=html -v
    
    - name: Check coverage regression
      if: matrix.python-version == '3.11'
      run: |
        python coverage_tracker.py --tolerance 2.0
      continue-on-error: true
    
    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: face-comparison-coverage
        fail_ci_if_error: false
      continue-on-error: true
    
    - name: Archive coverage reports
      if: matrix.python-version == '3.11'
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-${{ github.sha }}
        path: htmlcov/
        retention-days: 30
    
    - name: Update coverage baseline
      if: matrix.python-version == '3.11' && github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        python coverage_tracker.py --reset-baseline

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
    
    - name: Test main application
      run: |
        # Test that main application runs without crashing
        python src/main.py test/test_data/face_me_1.png test/test_data/me_different.png
    
    - name: Test coverage script
      run: |
        python run_coverage.py
    
    - name: Verify project structure
      run: |
        test -f src/main.py
        test -f src/face_compare.py
        test -d test/test_data
        test -f requirements.txt
        test -f README.md
        echo "âœ… Project structure verified"